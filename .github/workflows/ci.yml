name: Automated Deploy

on:
  push:
    branches:
      - 'main'
      - 'develop'

env:
  RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  DOCKER_IMAGE: 4lch4/k-blight-api

jobs:
  build-and-push:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  notify:
    name: Send Status Notification
    needs: build-and-push
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Prepare Commit Message
        id: prep-commit-msg
        run: |
          sudo apt-get install -y jq
          echo "COMMIT_MESSAGE=$(echo ${{ github.event.head_commit.message }} | jq -Rs .)" >> $GITHUB_ENV

      - name: Discord Notification
        uses: 'Ilshidur/action-discord@0.3.2'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: '${{ github.actor }} (GitHub Actions)'
          DISCORD_EMBEDS: '[ { "title": "${{ github.repository }}", "description": "**Commit Message**: $COMMIT_MESSAGE", "fields": [ { "name": "Status", "value": "`${{ needs.build-and-push.outputs.status }}`", "short": true, "inline": true }, { "name": "Event", "value": "`${{ github.event_name }}`", "short": true, "inline": true }, { "name": "Branch", "value": "`${{ github.ref }}`", "short": true, "inline": true }, { "name": "Commit", "value": "[${{ github.sha }}](${{ env.RUN_URL }})", "short": true, "inline": true }, { "name": "Workflow", "value": "[${{ github.workflow }}](${{ env.RUN_URL }})", "short": true, "inline": true } ] } ] '
        with:
          args: "The [latest build](${{ env.RUN_URL }}) for **${{ github.repository }}** has completed."
