name: Go Releaser

on:
  workflow_dispatch:

  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Simple Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # This is needed if you use fields like TagBody, TagSubject or TagContents in templates.
      - name: Fetch tags
        run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: Basic Build
        run: go build

      - name: Discord Notification
        uses: 'Ilshidur/action-discord@0.3.2'
        with:
          # args: 'The latest **{{ EVENT_PAYLOAD.repository.full_name }}** build has completed. {{EVENT_PAYLOAD.repository.html_url}}'
          args: |
            The latest **{{ EVENT_PAYLOAD.repository.full_name }}** build has completed. The following is for testing purposes:
            EVENT_PAYLOAD.repository.html_url: {{ EVENT_PAYLOAD.repository.html_url }}
            GITHUB_ACTION: {{ GITHUB_ACTION }}
            Pull_Request.ID: {{ EVENT_PAYLOAD.pull_request.id }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Use Appleboy's Discord Action
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: The ${{ github.event_name }} event triggered first step.
  release:
    name: Build & Release
    runs-on: ubuntu-latest

    # An if statement that makes sure this job only runs when a tag is pushed
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # This is needed if you use fields like TagBody, TagSubject or TagContents in templates.
      - name: Fetch tags
        run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Discord Notification
        uses: 'Ilshidur/action-discord@0.3.2'
        with:
          args: 'The project **{{ EVENT_PAYLOAD.repository.full_name }}** has been deployed.'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
